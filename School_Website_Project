<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>Noam's Blog!</title>
  <style>
    body 
    {
      flex-direction: column;
      display: flex;

    width: 100%;
    height: 100%;
    --color: rgba(114, 114, 114, 0.3);
    background-color: rgb(18,18,18);
    background-image: linear-gradient(0deg, transparent 24%, var(--color) 25%, var(--color) 26%, transparent 27%,transparent 74%, var(--color) 75%, var(--color) 76%, transparent 77%,transparent),
        linear-gradient(90deg, transparent 24%, var(--color) 25%, var(--color) 26%, transparent 27%,transparent 74%, var(--color) 75%, var(--color) 76%, transparent 77%,transparent);
    background-size: 55px 55px;
    }
    #title-Container
    {
        display: flex;
        justify-content: center;
        align-items: center;
    }
    
    #title 
    {
        color: white;
        font-size: 40px;
    }
    #add-Edit-Container
    {
      display: flex;
      justify-content: center;
      align-items: center;
    }
    button 
    {
        width: 10em;
        position: relative;
        height: 3.5em;
        border: 3px ridge rgb(138, 0, 0);
        outline: none;
        background-color: transparent;
        color: white;       
        transition: 0.4s;
        border-radius: 0.3em;
        font-size: 16px;
        font-weight: bold;
        cursor: pointer;
    }
  
    button::after 
    {
        content: "";
        position: absolute;
        top: -10px;
        left: 3%;
        width: 95%;
        height: 40%;
        transition: 0.5s;
        transform-origin: center;
    }
    
    button::before 
    {
        content: "";
        transform-origin: center;
        position: absolute;
        top: 80%;
        left: 3%;
        width: 95%;
        height: 40%;
        transition: 0.5s;
    }
    
    button:hover::before, button:hover::after {
        transform: scale(0)
    }
    
    button:hover {
        box-shadow: inset 0px 0px 25px red;
    }
   
    #add-Container 
    {
      margin-right: 0px;
      margin-right: 346px; 

    }
    #edit:active
    {
      cursor:crosshair;
    }
    #new-Title-Container
    {
      color: white;
      width: 700px;
      height: 40px;
    }

    #new-Title
    {
        font-size: 36px;
        color: rgb(219, 217, 217);
        margin:0px;
    }
    
    #actual-New-Text
    {
      margin:0px;
      padding-top: 0px;
      overflow-wrap: break-word;
      color: rgb(219, 217, 217);
    }
    #actual-New-Title 
    {
        margin: 0;
    }
    #blogs-Container 
    {
       align-self: center;
        display: flex;
        align-items: top;
        height: 1000px;
        width: 669px;
        flex-direction: column;
    }
    .hoverDiv {
    background-color: rgb(34, 34, 34);
    color: white;
    width: 669px;
    height: 100px;
    transition: background-color 0.5s;
    }

    .hoverDiv.hover-active:hover {
        background-color: rgb(70, 70, 70);
        cursor:pointer;
    }

  </style>
  <script>
    function loader() 
    { 
      const url = '/loadAll';

        fetch(url, {cache: "no-store"})
        .then(response => response.json())
        .then(array => {
      for(let i = 0; i < array.length; i++) 
      {
        let current = array[i]; 
        let newDiv = `
            <div id="${i}" class='hoverDiv'>
              <div id="new-Title-Container">
                <div id="new-Title">
                  <p id="actual-new-title">${current.title}</p>
                </div>
              </div>
              <div id="new-Text-Container">
                <div id="new-Text">
                  <p id="actual-New-Text">${current.text}</p>
                </div>
              </div>
            </div> `;
        document.getElementById("blogs-Container").innerHTML += newDiv; 
      }})  .catch(err => console.log(err));
    }
    let editMode;
    function editorPret()
    {
      if(editMode == null) 
      { editMode = true; }
      else if(editMode == true) { editMode = false; }
      else if(editMode == false) { editMode = true; }

      console.log(editMode);
      return editMode;
    }
    function editorPre() 
    {
      const hoverDivs = document.querySelectorAll(".hoverDiv");
      let edm = editorPret();
      hoverDivs.forEach(div => 
      { 
              if(edm === false) 
            {
                div.classList.remove("hover-active");
                div.removeEventListener("click", () =>
                  window.location.href="main.html")
                  
                div.addEventListener("click", () =>
                  window.location.href="main.html"
                )
            }
              if(edm === true) 
              {
                div.classList.add("hover-active");   
                div.addEventListener("click", () => {
                let cur = div.id;
                localStorage.setItem('edit_Id', cur);
                referEdit();
                });
              }

      });
    
    }
    function referEdit() 
    {
      let link = "edit.html";
      localStorage.setItem("referal", link);
      window.location.href="load.html";
    }
    function referAdd() 
    {
       let link = "add.html";
       localStorage.setItem("referal", link);
       window.location.href="load.html";
    }

  </script>
</head>
<body onload="loader()">
  
  <div id="title-Container">
    <p id="title">Noam's Blog</p>
  </div>

  <div id="add-Edit-Container">
    <a id="add-Container"><button id="add" class="button" onclick="referAdd()">Add</button> </a> 
    <button onclick="editorPre()"  id="edit" class="">Edit</button>
  </div>

  <div id="blogs-Container">

  </div>

  


</body>
</html>



להגיש כאן את קובץ דף הוספת פריט :
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>Add</title>
  <style>
   body 
    {
      flex-direction: column;
      display: flex;
      width: 100%;
      height: 100%;
      --color: rgba(114, 114, 114, 0.3);
      background-color: rgb(18,18,18);
      background-image: linear-gradient(0deg, transparent 24%, var(--color) 25%, var(--color) 26%, transparent 27%,transparent 74%, var(--color) 75%, var(--color) 76%, transparent 77%,transparent),
        linear-gradient(90deg, transparent 24%, var(--color) 25%, var(--color) 26%, transparent 27%,transparent 74%, var(--color) 75%, var(--color) 76%, transparent 77%,transparent);
      background-size: 55px 55px;
    }
    #title_Input_Container
    {
        display: flex;
        justify-content: center;
    }
    #title_Input
    {
        align-self: center;
        border: none;
        border-bottom: 2px solid red;
        height: 35px;
        width: 250px;
        background-color: rgb(64,64,64);
        align-items: center;
        font-size: 30px;
        color: white;   
        outline-width: 0;
    }
    #author_Input_Container
    {
        display: flex;
        justify-content: center;
    }
    #author_Input
    {
        align-self: center;
        border: none;
        border-bottom: 2px solid red;
        height: 29px;
        width: 170px;
        background-color: rgb(64,64,64);
        align-items: center;
        font-size: 20px;
        color: white;   
        outline-width: 0;
        margin-top:6px;
    }
    #date_Input
    {
        align-self: center;
        border: none;
        border-bottom: 2px solid red;
        height: 19px;
        width: 100px;
        background-color: rgb(64,64,64);
        align-items: center;
        font-size: 20px;
        color: white;   
        outline-width: 0;
        margin-top:6px;
    }
    #date_Balancer{
        color: white;
        display:inline-block;
        margin-left: 600px;
    }
    #date_Container
    {
        display: flex;
        justify-content: center;
    }


    #text_Container
    {
        display: flex;
        justify-content: center;
    }
    #text, #test
    {
        align-self: center;
        border: none;
        border-bottom: 2px solid red;
        height: 500px;
        width:700px;
        background-color: rgb(64,64,64);
        align-items: center;
        font-size: 20px;
        color: white;   
        outline-width: 0;
        margin-top:6px;
    }
    #text::-webkit-scrollbar-track
    {
	    background-color: rgb(76,76,76);
    }

    #text::-webkit-scrollbar
    {
        width: 10px;
        background-color: #F5F5F5;
    }

    #text::-webkit-scrollbar-thumb
    {
        border-radius: 100px;
        background-color: rgba(128, 128, 128, 0.81);
    }

    .buttons {
    display: flex;
    justify-content: space-around;
    top: 20px;
    left: 20px;
    }

    .buttons button {
    width: 150px;
    height: 50px;
    background-color: rgb(64,64,64);
    margin: 20px;
    color: white;
    position: relative;
    overflow: hidden;
    font-size: 14px;
    letter-spacing: 1px;
    font-weight: 500;
    text-transform: uppercase;
    transition: all 0.3s ease;
    cursor: pointer;
    border: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 3px;
    }

    .buttons button:before, .buttons button:after {
    content: "";
    position: absolute;
    width: 0;
    height: 2px;
    background-color: red;
    transition: all 0.3s cubic-bezier(0.35, 0.1, 0.25, 1);
    }

    .buttons button:before {
    right: 0;
    top: 0;
    transition: all 0.5s cubic-bezier(0.35, 0.1, 0.25, 1);
    }

    .buttons button:after {
    left: 0;
    bottom: 0;
    }

    .buttons button span {
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    margin: 0;
    padding: 0;
    z-index: 1;
    }

    .buttons button span:before, .buttons button span:after {
    content: "";
    position: absolute;
    width: 2px;
    height: 0;
    background-color: red;
    transition: all 0.3s cubic-bezier(0.35, 0.1, 0.25, 1);
    }

    .buttons button span:before {
    right: 0;
    top: 0;
    transition: all 0.5s cubic-bezier(0.35, 0.1, 0.25, 1);
    }

    .buttons button span:after {
    left: 0;
    bottom: 0;
    }

    .buttons button p {
    padding: 0;
    margin: 0;
    transition: all 0.4s cubic-bezier(0.35, 0.1, 0.25, 1);
    position: absolute;
    width: 100%;
    height: 100%;
    }

    .buttons button p:before, .buttons button p:after {
    position: absolute;
    width: 100%;
    transition: all 0.4s cubic-bezier(0.35, 0.1, 0.25, 1);
    z-index: 1;
    left: 0;
    }

    .buttons button p:before {
    content: attr(data-title);
    top: 50%;
    transform: translateY(-50%);
    }

    .buttons button p:after {
    content: attr(data-text);
    top: 150%;
    color: red;
    }

    .buttons button:hover:before, .buttons button:hover:after {
    width: 100%;
    }

    .buttons button:hover span {
    z-index: 1;
    }

    .buttons button:hover span:before, .buttons button:hover span:after {
    height: 100%;
    }

    .buttons button:hover p:before {
    top: -50%;
    transform: rotate(5deg);
    }

    .buttons button:hover p:after {
    top: 50%;
    transform: translateY(-50%);
    }

    .buttons button.start {
    background-color: #44d8a4;
    box-shadow: 0px 5px 10px -10px rgba(0, 0, 0, 0.2);
    transition: all 0.2s ease;
    }

    .buttons button.start p:before {
    top: -50%;
    transform: rotate(5deg);
    }

    .buttons button.start p:after {
    color: white;
    transition: all 0s ease;
    content: attr(data-start);
    top: 50%;
    transform: translateY(-50%);
    animation: start 0.3s ease;
    animation-fill-mode: forwards;
    }
    @keyframes start {
    from {
        top: -50%;
    }
    }
    .buttons button.start:hover:before, .buttons button.start:hover:after {
    display: none;
    }
    .buttons button.start:hover span {
    display: none;
    }
    .buttons button:active {
    outline: none;
    border: none;
    }
    .buttons button:focus {
    outline: 0;
    }    
  </style>

    <script>
      function Saver() 
      {
          let blog = {};
          blog.title = document.getElementById('title_Input').value;
          blog.author = document.getElementById('author_Input').value;
          blog.date = document.getElementById('date_Input').value;
          blog.text = document.getElementById('text').value;
          fetch(`/create/`,{
          method: 'POST',
          body: JSON.stringify(blog),
          headers: { 'Content-type': 'application/json; charset=UTF-8' },
        }).
        then(response => response.json()).
        then(result => {
          if (result.status == 'OK') {
              window.location.href ="/main.html";
          }
          else
          {
            document.getElementById("result").innerHTML = "Error, the BLOG wasn't added to the list";
            document.getElementById("result").className = "Error";
          }
        });

      }
      function referAddBack() 
    {
       let link = "main.html";
       localStorage.setItem("referal", link);
       window.location.href="load.html";
    }
      
    </script>

</head>
<body>
    <div id="title&Author-Container">
       <div id="title_Input_Container">
          <input id="title_Input" placeholder="Title"/>
       </div>
       <div id="author_Input_Container">
          <input id="author_Input" placeholder="author"/>
       </div>
    </div>
    <div id="keep_Together">
       <div id="date_Container">
          <input id="date_Input" placeholder="Date"/>
          <p id="date_Balancer"></p>
       </div>
       <div id="text_Container">
          <textarea id="text" placeholder="Blog:"></textarea>
       </div>
       <div class="buttons">
          <button class="btn">
             <span></span>
             <p data-text="Are you sure?" data-title="Save" onclick="Saver()"></p>
          </button>
          <a>
             <button class="btn" onclick="referAddBack()">
                <span></span>
                <p data-text="Are you sure?" data-title="Cancel"></p>
             </button>
          </a>
       </div>
    </div>
 </body>
</html>


להגיש כאן את קובץ דף עריכת פריט :
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>Edit</title>
  <style>
    body 
    {
      flex-direction: column;
      display: flex;
    width: 100%;
    height: 100%;
    --color: rgba(114, 114, 114, 0.3);
    background-color: rgb(18,18,18);
    background-image: linear-gradient(0deg, transparent 24%, var(--color) 25%, var(--color) 26%, transparent 27%,transparent 74%, var(--color) 75%, var(--color) 76%, transparent 77%,transparent),
        linear-gradient(90deg, transparent 24%, var(--color) 25%, var(--color) 26%, transparent 27%,transparent 74%, var(--color) 75%, var(--color) 76%, transparent 77%,transparent);
    background-size: 55px 55px;
    }
    #title_Input_Container
    {
        display: flex;
        justify-content: center;
    }
    #title_Input
    {
        align-self: center;
        border: none;
        border-bottom: 2px solid red;
        height: 35px;
        width: 250px;
        background-color: rgb(64,64,64);
        align-items: center;
        font-size: 30px;
        color: white;   
        outline-width: 0;
    }
    #author_Input_Container
    {
        display: flex;
        justify-content: center;
    }
    #author_Input
    {
        align-self: center;
        border: none;
        border-bottom: 2px solid red;
        height: 29px;
        width: 170px;
        background-color: rgb(64,64,64);
        align-items: center;
        font-size: 20px;
        color: white;   
        outline-width: 0;
        margin-top:6px;
    }
    #date_Input
    {
        align-self: center;
        border: none;
        border-bottom: 2px solid red;
        height: 19px;
        width: 100px;
        background-color: rgb(64,64,64);
        align-items: center;
        font-size: 20px;
        color: white;   
        outline-width: 0;
        margin-top:6px;
    }
    #date_Balancer{
        color: white;
        display:inline-block;
        margin-left: 600px;
    }
    #date_Container
    {
        display: flex;
        justify-content: center;
    }


    #text_Container
    {
        display: flex;
        justify-content: center;
    }
    #text
    {
        align-self: center;
        border: none;
        border-bottom: 2px solid red;
        height: 500px;
        width:700px;
        background-color: rgb(64,64,64);
        align-items: center;
        font-size: 20px;
        color: white;   
        outline-width: 0;
        margin-top:6px;
    }
    #text::-webkit-scrollbar-track
    {
	    background-color: rgb(76,76,76);
    }

    #text::-webkit-scrollbar
    {
        width: 10px;
        background-color: #F5F5F5;
    }

    #text::-webkit-scrollbar-thumb
    {
        border-radius: 100px;
        background-color: rgba(128, 128, 128, 0.81);
    }

    .buttons {
    display: flex;
    justify-content: space-around;
    top: 20px;
    left: 20px;
    }

    .buttons button {
    width: 150px;
    height: 50px;
    background-color: rgb(64,64,64);
    margin: 20px;
    color: white;
    position: relative;
    overflow: hidden;
    font-size: 14px;
    letter-spacing: 1px;
    font-weight: 500;
    text-transform: uppercase;
    transition: all 0.3s ease;
    cursor: pointer;
    border: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 3px;
    }

    .buttons button:before, .buttons button:after {
    content: "";
    position: absolute;
    width: 0;
    height: 2px;
    background-color: red;
    transition: all 0.3s cubic-bezier(0.35, 0.1, 0.25, 1);
    }

    .buttons button:before {
    right: 0;
    top: 0;
    transition: all 0.5s cubic-bezier(0.35, 0.1, 0.25, 1);
    }

    .buttons button:after {
    left: 0;
    bottom: 0;
    }

    .buttons button span {
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    margin: 0;
    padding: 0;
    z-index: 1;
    }

    .buttons button span:before, .buttons button span:after {
    content: "";
    position: absolute;
    width: 2px;
    height: 0;
    background-color: red;
    transition: all 0.3s cubic-bezier(0.35, 0.1, 0.25, 1);
    }

    .buttons button span:before {
    right: 0;
    top: 0;
    transition: all 0.5s cubic-bezier(0.35, 0.1, 0.25, 1);
    }

    .buttons button span:after {
    left: 0;
    bottom: 0;
    }

    .buttons button p {
    padding: 0;
    margin: 0;
    transition: all 0.4s cubic-bezier(0.35, 0.1, 0.25, 1);
    position: absolute;
    width: 100%;
    height: 100%;
    }

    .buttons button p:before, .buttons button p:after {
    position: absolute;
    width: 100%;
    transition: all 0.4s cubic-bezier(0.35, 0.1, 0.25, 1);
    z-index: 1;
    left: 0;
    }

    .buttons button p:before {
    content: attr(data-title);
    top: 50%;
    transform: translateY(-50%);
    }

    .buttons button p:after {
    content: attr(data-text);
    top: 150%;
    color: red;
    }

    .buttons button:hover:before, .buttons button:hover:after {
    width: 100%;
    }

    .buttons button:hover span {
    z-index: 1;
    }

    .buttons button:hover span:before, .buttons button:hover span:after {
    height: 100%;
    }

    .buttons button:hover p:before {
    top: -50%;
    transform: rotate(5deg);
    }

    .buttons button:hover p:after {
    top: 50%;
    transform: translateY(-50%);
    }

    .buttons button.start {
    background-color: #44d8a4;
    box-shadow: 0px 5px 10px -10px rgba(0, 0, 0, 0.2);
    transition: all 0.2s ease;
    }

    .buttons button.start p:before {
    top: -50%;
    transform: rotate(5deg);
    }

    .buttons button.start p:after {
    color: white;
    transition: all 0s ease;
    content: attr(data-start);
    top: 50%;
    transform: translateY(-50%);
    animation: start 0.3s ease;
    animation-fill-mode: forwards;
    }
    @keyframes start {
    from {
        top: -50%;
    }
    }
    .buttons button.start:hover:before, .buttons button.start:hover:after {
    display: none;
    }
    .buttons button.start:hover span {
    display: none;
    }
    .buttons button:active {
    outline: none;
    border: none;
    }
    .buttons button:focus {
    outline: 0;
    }    
  </style>
 <script>
    function displayer() 
    {
       	const url = '/loadAll';

        fetch(url, {cache: "no-store"})
        .then(response => response.json())
        .then(current => { 
          index = localStorage.getItem("edit_Id");
        document.getElementById("title_Input").value = current[index].title;
        document.getElementById("author_Input").value = current[index].author;
        document.getElementById("date_Input").value = current[index].date;
        document.getElementById("text").value = current[index].text;
         })
	      .catch(err => console.log(err));


    }

    function savior()
    {
        blog = {}
        blog.title = document.getElementById("title_Input").value;
        blog.author = document.getElementById("author_Input").value;
        blog.date = document.getElementById("date_Input").value;
        blog.text = document.getElementById("text").value;
        index = localStorage.getItem("edit_Id");
        fetch (`/update/${index}`, {
          method: 'POST',
          body: JSON.stringify(blog ),
          headers: { 'Content-type': 'application/json; charset=UTF-8' },
        }).
        then(response => response.json()).
        then(result => {
          if (result.status == 'OK') {
            referEditBack();
          }
          else
            console.log("Update Failed");
        });

      
        
    }
    function deletor() 
    {
          index = parseInt(window.location.href.split("id=")[1]);
          fetch (`/remove/${index}`, {
            method: 'POST',
            headers: { 'Content-type': 'application/json; charset=UTF-8' },
          }).
          then(response => response.json()).
          then(result => {
            if (result.status == 'OK') {
              referEditBack() 
            }
            else
              console.lot("Remove Failed");
          });
    }

        
    

    function referEditBack() 
    {
       let link = "main.html";
       localStorage.setItem("referal", link);
       window.location.href="load.html";
    }



 </script>


</head>
<body onload="displayer()">
    <div id="title&Author_Container">
        <div id="title_Input_Container">
            <input id="title_Input" placeholder="Title"/>
        </div>

        <div id="author_Input_Container">
            <input id="author_Input" placeholder="Author"/>
        </div>
    </div>

    <div id="keep_Together">
        <div id="date_Container">
            <input id="date_Input" placeholder="Date"/>
            <p id="date_Balancer"></p>
        </div>

        <div id="text_Container">
            <textarea id="text" placeholder="Blog:"></textarea>
        </div>


        <div class="buttons">
            <a><button class="btn" onclick="savior()"><span></span><p data-text="Are you sure?" data-title="Save"></p></button> </a>
            <a><button class="btn" onclick="deletor()"><span></span><p data-text="Are you sure?" data-title="Delete"></p></button> </a>
            <a><button class="btn" onclick="referEditBack()"><span></span><p data-text="Are you sure?" data-title="Cancel"></p></button> </a>

        </div>
        
    </div>
</body>
</html>

בנוסף, load.html כי למה לא:
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
    <title>Loading...</title>
  <style>
    #body {
      background-color: rgb(16, 16, 16);
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .loader {
      display: flex;
      width: 8rem;
      height: 8rem;
      justify-content: center;
      align-items: center;
      position: relative;
      flex-direction: column;
      align-self: center;
      justify-content: center;
      align-items: center;
    }

    .curve {
      width: 180%;
      height: 180%;
      position: absolute;
      animation: rotate 8s linear infinite;
      fill: transparent;
    }

    .curve text {
      letter-spacing: 20px;
      text-transform: uppercase;
      font: 1.5em "Fira Sans", sans-serif;
      fill: white;
      filter: drop-shadow(0 2px 8px black);
    }

    .blackhole {
      z-index: -1;
      display: flex;
      position: absolute;
      width: 8rem;
      height: 8rem;
      align-items: center;
      justify-content: center;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }

    .blackhole-circle {
      z-index: 0;
      display: flex;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      background: radial-gradient(circle at center, black 25%, white 35%, white 100%);
      box-shadow: 0px 0px 2rem #c2babb;
      align-items: center;
      justify-content: center;
    }

    .blackhole-circle::after {
      z-index: 0;
      position: absolute;
      content: "";
      display: flex;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      border: 4px solid white;
      background: radial-gradient(circle at center, black 35%, white 60%, white 100%);
      box-shadow: 0px 0px 5rem #c2babb;
      align-items: center;
      justify-content: center;
      filter: blur(4px);
      animation: pulseAnimation linear infinite 2s alternate-reverse;
    }

    .blackhole-circle::before {
      z-index: 1;
      content: "";
      display: flex;
      width: 4rem;
      height: 4rem;
      border: 2px solid #ffffff;
      box-shadow: 3px 3px 10px #c2babb, inset 0 0 1rem #ffffff;
      border-radius: 50%;
      top: 5rem;
      filter: blur(0.5px);
      animation: rotate linear infinite 3s;
    }

    .blackhole-disc {
      position: absolute;
      z-index: 0;
      display: flex;
      width: 5rem;
      height: 10rem;
      border-radius: 50%;
      background: radial-gradient(circle at center, #ffffff 80%, #353535 90%, white 100%);
      filter: blur(1rem) brightness(130%);
      border: 1rem solid white;
      box-shadow: 0px 0px 3rem #d7c4be;
      transform: rotate3d(1, 1, 1, 220deg);
      animation: pulseAnimation2 linear infinite 2s alternate-reverse;
      justify-content: center;
      align-items: center;
    }

    .blackhole-disc::before {
      content: "";
      position: absolute;
      z-index: 0;
      display: flex;
      width: 5rem;
      height: 10rem;
      border-radius: 50%;
      background: radial-gradient(circle at center, #ffffff 80%, #353535 90%, white 100%);
      filter: blur(3rem);
      border: 1rem solid white;
      box-shadow: 0px 0px 6rem #d7c4be;
      animation: pulseAnimation linear infinite 2s alternate-reverse;
    }

    @keyframes rotate {
      0% {
        transform: rotate(0deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }

    @keyframes pulseAnimation {
      0% {
        box-shadow: 0px 0px 3rem #c2babb;
        transform: scale(1);
      }

      100% {
        box-shadow: 0px 0px 5rem #c2babb;
        transform: scale(1.09);
      }
    }

    @keyframes pulseAnimation2 {
      0% {
        box-shadow: 0px 0px 3rem #c2babb;
        transform: rotate3d(1, 1, 1, 220deg) scale(1);
      }

      100% {
        box-shadow: 0px 0px 5rem #c2babb;
        transform: rotate3d(1, 1, 1, 220deg) scale(.95);
      }
    }

  </style>
<script>


function getRandomTime(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

  function redirectToPage(url) {
  var randomTime = getRandomTime(1, 3) * 1000; 

  setTimeout(function() {
    window.location.href = url;
  }, randomTime);
}

redirectToPage(localStorage.getItem("referal"));

    
</script>
</head>
<body id="body">
  <div class="loader">
    <div class="blackhole">
      <div class="blackhole-circle"></div>
      <div class="blackhole-disc"></div>
    </div>

    <div class="curve">
      <svg viewBox="0 0 500 500">
        <path id="loading" d="M73.2,148.6c4-6.1,65.5-96.8,178.6-95.6c111.3,1.2,170.8,90.3,175.1,97"></path>
        <text width="500">
          <textPath xlink:href="#loading">
            loading...
          </textPath>
        </text>
      </svg>
    </div>
  </div>
</body>
</html>




















להגיש כאן את קובץ השרת :
const express = require('express')
const bodyParser = require('body-parser');

const app = express()
const port = 3000

const fs = require('fs');

const hostname = '127.0.0.1';
const DATA = "./data.json";

app.use(bodyParser.json());
app.use(express.static('public'));

app.get('/loadAll', (req,res) => {
  console.log('All');
	fs.readFile(DATA, (err, data) => {
    res.send(data);
    });
});

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`)
})


app.post('/create/', (req,res) => {
	fs.readFile(DATA, (err, data) => {
      let list = JSON.parse(data);
      list.unshift(req.body);
      fs.writeFile(DATA, JSON.stringify(list), (err) => {
        if (!err) console.log(err);
      });
      res.send(JSON.stringify({"status":"OK"}));
    });
});



app.post('/update/:id', (req,res) => {
	fs.readFile(DATA, (err, data) => {
      let list = JSON.parse(data);
      let id = req.params.id;
      list[id] = req.body;
      fs.writeFile(DATA, JSON.stringify(list), (err) => {
        if (!err) console.log(err);
      });
      res.send(JSON.stringify({"status":"OK"}));
    });
});






app.post('/remove/:id', (req,res) => {
	fs.readFile(DATA, (err, data) => {
      let list = JSON.parse(data);
      let id = req.params.id;
      list.splice(id,1);
      fs.writeFile(DATA, JSON.stringify(list), (err) => {
        if (!err) console.log(err);
      });
      res.send(JSON.stringify({"status":"OK"}));
    });
});
